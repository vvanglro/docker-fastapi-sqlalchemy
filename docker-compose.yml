version: "3.8"

networks:
  db_network:
    driver: bridge

services:
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_DATABASE:
      TZ:
    networks:
      - db_network
    volumes:
      - ./compose/mysql/data:/var/lib/mysql:rw  # 挂载数据库数据, 可读可写  !建议docker-compose build前先创建/compose/mysql/data空文件夹
    ports:
      - "3306:3306"  # 与配置文件保持一致
    restart: always
    tty: true    # 防止docker-compose生成的容器执行脚本命令后立刻退出  如果不加这俩参数 在docker-compose build后直接docker-compose up -d时database.py里识别不了db 如果build后先up 在up -d则可以不加这俩参数也行
    stdin_open: true  # 防止docker-compose生成的容器执行脚本命令后立刻退出

  redis:
    image: bitnami/redis
    environment:
      REDIS_PASSWORD:
    ports:
      - "7000:6379"
    networks:
      - db_network
    volumes:
      - ./compose/redis/data:/bitnami/redis/data  # 本地权限sudo chmod -R 777 compose/redis/data
    command: /opt/bitnami/scripts/redis/run.sh --appendonly yes
    restart: always

  web:
    build: .
    command: /bin/bash -c "aerich upgrade &&  uvicorn run:app --host 0.0.0.0 --port 80 --workers 5 --log-level info --log-config log-config.json"
    ports:
      - "7777:80"
    volumes:
      - .:/workspace # 挂载项目代码
    networks:
      - db_network
    depends_on:
      - db
      - redis
    restart: always
    tty: true
    stdin_open: true
